<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
	<session-factory>
		<property name="hibernate.connection.driver_class">oracle.jdbc.OracleDriver</property>
		<property name="hibernate.connection.username">Eintern</property>
		<property name="hibernate.connection.password">Admin9090ntern</property>
		<property name="hibernate.connection.url">jdbc:oracle:thin:@localhost:1521:xe</property>
		<property name="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</property>
		
		<property name="connection.pool_size">1</property>
		<property name="show_sql">true</property>
		<property name="hbm2ddl.auto">update</property>
		<!--
		hbm2ddl.auto  	Automatically validates or exports schema DDL to the database when the SessionFactory is created. 
		With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.
		
		Options for hbm2ddl.auto:
    validate: validate that the schema matches, make no changes to the schema of the database, you probably want this for production.
    update: update the schema to reflect the entities being persisted
    create: creates the schema necessary for your entities, destroying any previous data.
    create-drop: create the schema as in create above, but also drop the schema at the end of the session. This is great in early development or for testing.
		  -->
		
		<!-- Added to solve "bean validator not found error" when using both Hibernate and WebLogic server -->
		<property name="javax.persistence.validation.mode">none</property>
		
<!--  		<mapping class="orm.Employee"/>		
 --> 		 	<mapping class="com.eintern.orm.entity.Customer"/>		
 				<mapping class="com.eintern.orm.entity.StorageUnit"/>	
 				<mapping class="com.eintern.orm.entity.Transaction"/>	
 				<mapping class="com.eintern.orm.entity.UserAuthorization"/>	
 				<mapping class="com.eintern.orm.entity.Manager"/>

	</session-factory>
</hibernate-configuration>